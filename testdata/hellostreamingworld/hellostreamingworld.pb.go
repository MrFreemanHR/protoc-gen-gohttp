// Code generated by protoc-gen-go. DO NOT EDIT.
// source: testdata/hellostreamingworld/hellostreamingworld.proto

package hellostreamingworldpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name and how many greetings
// they want.
type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NumGreetings         string   `protobuf:"bytes,2,opt,name=num_greetings,json=numGreetings" json:"num_greetings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hellostreamingworld_c50daba53311d552, []int{0}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (dst *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(dst, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HelloRequest) GetNumGreetings() string {
	if m != nil {
		return m.NumGreetings
	}
	return ""
}

// A response message containing a greeting
type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_hellostreamingworld_c50daba53311d552, []int{1}
}
func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (dst *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(dst, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "hellostreamingworld.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "hellostreamingworld.HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MultiGreeterClient is the client API for MultiGreeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MultiGreeterClient interface {
	// Sends multiple greetings
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (MultiGreeter_SayHelloClient, error)
}

type multiGreeterClient struct {
	cc *grpc.ClientConn
}

func NewMultiGreeterClient(cc *grpc.ClientConn) MultiGreeterClient {
	return &multiGreeterClient{cc}
}

func (c *multiGreeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (MultiGreeter_SayHelloClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MultiGreeter_serviceDesc.Streams[0], "/hellostreamingworld.MultiGreeter/sayHello", opts...)
	if err != nil {
		return nil, err
	}
	x := &multiGreeterSayHelloClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MultiGreeter_SayHelloClient interface {
	Recv() (*HelloReply, error)
	grpc.ClientStream
}

type multiGreeterSayHelloClient struct {
	grpc.ClientStream
}

func (x *multiGreeterSayHelloClient) Recv() (*HelloReply, error) {
	m := new(HelloReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MultiGreeterServer is the server API for MultiGreeter service.
type MultiGreeterServer interface {
	// Sends multiple greetings
	SayHello(*HelloRequest, MultiGreeter_SayHelloServer) error
}

func RegisterMultiGreeterServer(s *grpc.Server, srv MultiGreeterServer) {
	s.RegisterService(&_MultiGreeter_serviceDesc, srv)
}

func _MultiGreeter_SayHello_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HelloRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MultiGreeterServer).SayHello(m, &multiGreeterSayHelloServer{stream})
}

type MultiGreeter_SayHelloServer interface {
	Send(*HelloReply) error
	grpc.ServerStream
}

type multiGreeterSayHelloServer struct {
	grpc.ServerStream
}

func (x *multiGreeterSayHelloServer) Send(m *HelloReply) error {
	return x.ServerStream.SendMsg(m)
}

var _MultiGreeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hellostreamingworld.MultiGreeter",
	HandlerType: (*MultiGreeterServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "sayHello",
			Handler:       _MultiGreeter_SayHello_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "testdata/hellostreamingworld/hellostreamingworld.proto",
}

func init() {
	proto.RegisterFile("testdata/hellostreamingworld/hellostreamingworld.proto", fileDescriptor_hellostreamingworld_c50daba53311d552)
}

var fileDescriptor_hellostreamingworld_c50daba53311d552 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x32, 0x2b, 0x49, 0x2d, 0x2e,
	0x49, 0x49, 0x2c, 0x49, 0xd4, 0xcf, 0x48, 0xcd, 0xc9, 0xc9, 0x2f, 0x2e, 0x29, 0x4a, 0x4d, 0xcc,
	0xcd, 0xcc, 0x4b, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0xc1, 0x26, 0xa6, 0x57, 0x50, 0x94, 0x5f, 0x92,
	0x2f, 0x24, 0x8c, 0x45, 0x4a, 0xc9, 0x9d, 0x8b, 0xc7, 0x03, 0x24, 0x1c, 0x94, 0x5a, 0x58, 0x9a,
	0x5a, 0x5c, 0x22, 0x24, 0xc4, 0xc5, 0x92, 0x97, 0x98, 0x9b, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1,
	0x19, 0x04, 0x66, 0x0b, 0x29, 0x73, 0xf1, 0xe6, 0x95, 0xe6, 0xc6, 0xa7, 0x17, 0xa5, 0xa6, 0x96,
	0x64, 0xe6, 0xa5, 0x17, 0x4b, 0x30, 0x81, 0x25, 0x79, 0xf2, 0x4a, 0x73, 0xdd, 0x61, 0x62, 0x4a,
	0x6a, 0x5c, 0x5c, 0x50, 0x83, 0x0a, 0x72, 0x2a, 0x85, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b,
	0x13, 0xd3, 0x61, 0x26, 0xc1, 0xb8, 0x46, 0x49, 0x5c, 0x3c, 0xbe, 0xa5, 0x39, 0x25, 0x99, 0x60,
	0x9d, 0xa9, 0x45, 0x42, 0x41, 0x5c, 0x1c, 0xc5, 0x89, 0x95, 0x60, 0xad, 0x42, 0x8a, 0x7a, 0xd8,
	0x5c, 0x8f, 0xec, 0x3e, 0x29, 0x79, 0x7c, 0x4a, 0x0a, 0x72, 0x2a, 0x95, 0x18, 0x0c, 0x18, 0x9d,
	0xc4, 0xa3, 0x44, 0xb1, 0xa8, 0x2a, 0x48, 0x4a, 0x62, 0x03, 0x87, 0x84, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xac, 0xce, 0x2c, 0xa7, 0x43, 0x01, 0x00, 0x00,
}
